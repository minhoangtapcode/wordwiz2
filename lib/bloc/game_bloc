import 'dart:async';
import 'package:flutter_bloc/flutter_bloc.dart';

abstract class GameEvent {}
class StartGameEvent extends GameEvent {
  final String category;
  StartGameEvent(this.category);
}
class SubmitGuessEvent extends GameEvent {
  final String guess;
  SubmitGuessEvent(this.guess);
}
class ShowHintEvent extends GameEvent {}
class PlayAgainEvent extends GameEvent {
  final String category;
  PlayAgainEvent(this.category);
}
class QuitEvent extends GameEvent {}

class GameState {
  final String clue;
  final String answer;
  final String feedback;
  final String hint;
  final bool isCorrect;
  final bool isTimeOut;
  final bool isIncorrect;
  final int score;
  final String category;
  final int wordsMastered;
  final int incorrectAttempts;

  GameState({
    required this.clue,
    required this.answer,
    this.feedback = '',
    this.hint = '',
    this.isCorrect = false,
    this.isTimeOut = false,
    this.isIncorrect = false,
    this.score = 0,
    this.category = "Food",
    this.wordsMastered = 0,
    this.incorrectAttempts = 0,
  });
}

class GameBloc extends Bloc<GameEvent, GameState> {
  GameBloc() : super(GameState(clue: "This is a fruit. It’s red.", answer: "apple", score: 0, category: "Food")) {
    on<StartGameEvent>((event, emit) {
      emit(GameState(clue: "This is a fruit. It’s red.", answer: "apple", score: state.score, category: event.category));
    });
    on<SubmitGuessEvent>((event, emit) {
      if (event.guess.toLowerCase() == state.answer.toLowerCase()) {
        emit(GameState(
          clue: state.clue,
          answer: state.answer,
          isCorrect: true,
          score: state.score + 10,
          category: state.category,
          wordsMastered: state.wordsMastered + 1,
          incorrectAttempts: 0,
        ));
      } else {
        int newIncorrectAttempts = state.incorrectAttempts + 1;
        if (newIncorrectAttempts >= 3) {
          emit(GameState(
            clue: state.clue,
            answer: state.answer,
            feedback: '',
            isIncorrect: true,
            score: state.score,
            category: state.category,
            wordsMastered: state.wordsMastered,
            incorrectAttempts: 0,
          ));
        } else {
          emit(GameState(
            clue: state.clue,
            answer: state.answer,
            feedback: "Try again!",
            isIncorrect: false,
            score: state.score,
            category: state.category,
            wordsMastered: state.wordsMastered,
            incorrectAttempts: newIncorrectAttempts,
          ));
        }
      }
    });
    on<ShowHintEvent>((event, emit) {
      emit(GameState(
        clue: state.clue,
        answer: state.answer,
        feedback: state.feedback,
        hint: "First letter: ${state.answer[0]}",
        isIncorrect: state.isIncorrect,
        score: state.score,
        category: state.category,
        wordsMastered: state.wordsMastered,
        incorrectAttempts: state.incorrectAttempts,
      ));
    });
    on<PlayAgainEvent>((event, emit) {
      emit(GameState(clue: "This is a fruit. It’s red.", answer: "apple", score: state.score, category: event.category, wordsMastered: state.wordsMastered));
    });
    on<QuitEvent>((event, emit) {
      // Chuyển về Welcome Screen sau này
    });
  }
}